c
user_id = JWT.decode(token, "codeoverflowapp")[0]["user_id"]
user_id = JWT.decode(t, "codeoverflowapp")[0]["user_id"]
token
headers
c
exit
JWT.decode(t, "codeoverflowapp")[0]["user_id"]
JWT.decode(t, "codeoverflowapp")[0]
JWT.decode(t, "codeoverflowapp")
t = request.headers["Authorization"].split(" ")[1]
request.headers["Authorization"].split(" ")[1]
request.headers["Authorization"].split(" ")
request.headers["Authorization"].split(", ")
request.headers["Authorization"].splite(", ")
request.headers["Authorization"]
request.headers
exit
c
request.headers["Authorization"]
request.headers
request
exit
user
exit
a.authenticate(params[:user][:password])
a.authenticate(params[:users][:password])
a.authenticate(params[:users][password])
a
a = User.find_by(username: params[:user][:username])
params[:user][:username]
params[:user]
params[user]
params
params.user[:username]
params[user: :username]
params[:username]
params
 User.find_by(username: params[:username])
User.find_by(username: params[:username])
User.find_by(usename: params[:username])
user = User.find_by(username: params[:username])
params[username:]
params[:username]
params
user = User.find_by(username: params[:username])
params
c
params[:id]
params
@user = User.find_by(params[:id])
@user
params
c
@user
params
c
@user
params
c
@user
params
